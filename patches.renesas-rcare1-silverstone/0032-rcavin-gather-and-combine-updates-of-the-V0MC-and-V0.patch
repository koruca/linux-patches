From 1e65cdddd9cf1c6e58a4d5ef63ea3713724255c2 Mon Sep 17 00:00:00 2001
From: Katsuya Matsubara <matsu@igel.co.jp>
Date: Fri, 18 May 2012 18:58:27 +0900
Subject: [PATCH 32/73] rcavin: gather and combine updates of the V0MC and V0DMR registers

According to the spec., updating the V0MC and V0DMR registers may
be evaluated in a while. So sequential (incremental) updates should
be never applied to such the registers.
This changes gathers updates of the registers in rcar_vin_capture()
and applies the combined updates at one time.
---
 drivers/media/video/rcarvin.c |   69 ++++++++++++++++++-----------------------
 1 files changed, 30 insertions(+), 39 deletions(-)

diff --git a/drivers/media/video/rcarvin.c b/drivers/media/video/rcarvin.c
index bd9ca51..3b4400a 100644
--- a/drivers/media/video/rcarvin.c
+++ b/drivers/media/video/rcarvin.c
@@ -367,7 +367,7 @@ static int rcar_vin_capture(struct rcar_vin_dev *pcdev)
 {
 	struct soc_camera_device *icd = pcdev->icd;
 	u32 status_of_int;
-	u32 field;
+	u32 field, mc, dmr;
 	int ret = 0;
 
 	status_of_int = vin_read(pcdev, V0INTS);
@@ -390,58 +390,45 @@ static int rcar_vin_capture(struct rcar_vin_dev *pcdev)
 	/* disable interrupt */
 	vin_write(pcdev, V0IE, 0x00000000);
 
-	if ((status_of_int & VIN_VNIE_MASK) == 0) {
-		switch (pcdev->field) {
-		case V4L2_FIELD_TOP:
-			field = VIN_VNMC_IM_ODD;
-			break;
-		case V4L2_FIELD_BOTTOM:
-			field = VIN_VNMC_IM_EVEN;
-			break;
-		case V4L2_FIELD_INTERLACED:
-		case V4L2_FIELD_INTERLACED_TB:
-			field = VIN_VNMC_IM_FULL;
-			break;
-		case V4L2_FIELD_INTERLACED_BT:
-			field = VIN_VNMC_IM_FULL;
-			break;
-		default:
-			field = VIN_VNMC_IM_ODD;
-			break;
-		}
-		vin_write(pcdev, V0MC,
-		(vin_read(pcdev, V0MC) & ~VIN_VNMC_FIELD_MASK) | field);
+	switch (pcdev->field) {
+	case V4L2_FIELD_TOP:
+		field = VIN_VNMC_IM_ODD;
+		break;
+	case V4L2_FIELD_BOTTOM:
+		field = VIN_VNMC_IM_EVEN;
+		break;
+	case V4L2_FIELD_INTERLACED:
+	case V4L2_FIELD_INTERLACED_TB:
+		field = VIN_VNMC_IM_FULL;
+		break;
+	case V4L2_FIELD_INTERLACED_BT:
+		field = VIN_VNMC_IM_FULL;
+		break;
+	default:
+		field = VIN_VNMC_IM_ODD;
+		break;
 	}
 
 	/* start capture */
 	switch (icd->current_fmt->host_fmt->fourcc) {
 	case V4L2_PIX_FMT_NV16:
 	case V4L2_PIX_FMT_YUYV:
-		vin_write(pcdev, V0DMR,
-			vin_read(pcdev, V0DMR) | VIN_VNDMR_BPSM);
-		vin_write(pcdev, V0MC,
-			vin_read(pcdev, V0MC) |
-			VIN_VNMC_ME | VIN_VNMC_BPS |
-			VIN_VNMC_VUP);
+		dmr = VIN_VNDMR_BPSM;
+		mc = field | VIN_VNMC_VUP | VIN_VNMC_BPS;
 		break;
 	case V4L2_PIX_FMT_UYVY:
-		vin_write(pcdev, V0DMR,
-			vin_read(pcdev, V0DMR) & ~VIN_VNDMR_BPSM);
-		vin_write(pcdev, V0MC,
-			vin_read(pcdev, V0MC) |
-			VIN_VNMC_ME | VIN_VNMC_BPS |
-			VIN_VNMC_VUP);
+		dmr = 0;
+		mc = field | VIN_VNMC_VUP | VIN_VNMC_BPS;
 		break;
 	case V4L2_PIX_FMT_RGB565:
-		vin_write(pcdev, V0DMR,
-			vin_read(pcdev, V0DMR) & ~VIN_VNDMR_BPSM);
-		vin_write(pcdev, V0MC,
-			(vin_read(pcdev, V0MC) & (~VIN_VNMC_BPS)) |
-			VIN_VNMC_ME | VIN_VNMC_VUP);
+		dmr = 0;
+		mc = field | VIN_VNMC_VUP;
 		break;
 	default:
 	printk(KERN_ALERT "<WARNNING msg=\"Invalid fourcc\" fourcc=\"0x%x\"/>\n",
 		icd->current_fmt->host_fmt->fourcc);
+		dmr = vin_read(pcdev, V0DMR);
+		mc = vin_read(pcdev, V0MC);
 		break;
 	}
 
@@ -453,6 +440,10 @@ static int rcar_vin_capture(struct rcar_vin_dev *pcdev)
 		vin_write(pcdev, V0FC, VIN_VNFC_S_FRAME);
 	}
 
+	/* start capturing */
+	vin_write(pcdev, V0DMR, dmr);
+	vin_write(pcdev, V0MC, mc | VIN_VNMC_ME);
+
 	/* enable interrupt */
 	vin_write(pcdev, V0IE, VIN_VNIE_MASK);
 
-- 
1.7.0.4

