From 8093ddeebd898779713fd3132a07522270e91173 Mon Sep 17 00:00:00 2001
From: Takanari Hayama <taki@igel.co.jp>
Date: Wed, 28 Dec 2011 10:32:08 +0900
Subject: [PATCH 71/80] video: rcarfb: flip buffer fix and NV supports.


Signed-off-by: Katsuya Matsubara <matsu@igel.co.jp>
---
 arch/arm/mach-rcar/board-silverstone.c |    4 +-
 drivers/video/rcarfb.c                 |   78 +++++++++++++++++++++++---------
 include/video/rcarfb.h                 |   21 ++++++++-
 3 files changed, 77 insertions(+), 26 deletions(-)

diff --git a/arch/arm/mach-rcar/board-silverstone.c b/arch/arm/mach-rcar/board-silverstone.c
index 102aa83..f776317 100644
--- a/arch/arm/mach-rcar/board-silverstone.c
+++ b/arch/arm/mach-rcar/board-silverstone.c
@@ -608,12 +608,12 @@ static struct rcar_reso_info rcar_reso_par = {
 		.vsp  = 809,
 	},
 	.fb_desc[0] = {
-		.caps	= RCAR_FBCAPS_NONE,
+		.caps	= RCAR_FBCAPS_YC,
 		.index1	= 0,
 		.index2	= 0,
 	},
 	.fb_desc[1] = {
-		.caps	= RCAR_FBCAPS_NONE,
+		.caps	= RCAR_FBCAPS_YC,
 		.index1	= 1,
 		.index2	= 1,
 	},
diff --git a/drivers/video/rcarfb.c b/drivers/video/rcarfb.c
index 986676a..deeb9b7 100644
--- a/drivers/video/rcarfb.c
+++ b/drivers/video/rcarfb.c
@@ -154,6 +154,34 @@ static void du_wait_bit(struct rcar_du_priv *priv,
 }
 #endif
 
+
+static int care1_format_to_depth(CarE1PlaneFormat format)
+{
+	switch (format) {
+	case CARE1_FORMAT_ARGB:
+		return 32;
+	case CARE1_FORMAT_RGB16:
+	case CARE1_FORMAT_UYVY:
+	case CARE1_FORMAT_YUY2:
+		return 16;
+
+	default:
+		return 16;
+	}
+}
+
+CarE1PlaneFormat depth_to_care1_format(int depth)
+{
+	switch (depth) {
+	case 16:
+		return CARE1_FORMAT_RGB16;
+	case 32:
+		return CARE1_FORMAT_ARGB;
+	default:
+		return CARE1_FORMAT_UNKNOWN;
+	}
+}
+
 static int du_check_disp_mode(unsigned long xres, unsigned long yres)
 {
 	int mode;
@@ -248,12 +276,10 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 		alphamode = PnSPIM_ALPOFF_PnMR;
 	}
 	else if (planeconfig->options & CARE1_PLANE_ALPHACHANNEL) {
-		if (planeconfig->depth == 32)
+		if (planeconfig->format == CARE1_FORMAT_ARGB)
 			alphamode = PnSPIM_TPOFF_PnMR;
 	}
 
-	printk(KERN_DEBUG "index1 %d\n", index1);
-	printk(KERN_DEBUG "index2 %d\n", index2);
 	plane1 = &priv->plane[index1];
 
 	disp1 = plane1->disp;
@@ -267,7 +293,7 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 	dshpr = du_read(priv, DSHPR);
 	dshpr &= MASK_PRIL;
 
-	if (planeconfig->depth == 16) {
+	if (care1_format_to_depth(planeconfig->format) == 16) {
 		/* In case of 16BPP, use the plane1 */
 		du_write(priv, DEFR4, BPP16_DEFR4);
 		du_write(priv, PnDDCR(index1), BPP16_DDCR);
@@ -286,11 +312,18 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 		du_write(priv, DSHPR, (dshpr | BPP32_PRIL_DSHPR));
 	}
 
-//	du_write(priv, DPPR, 0x00000000);
-	printk(KERN_DEBUG "DPPR 0x%08lx\n", du_read(priv,DPPR));
-
 	/* for plane1 */
-	du_write(priv, PnMR(index1), MODE_16BPP_PnMR | alphamode);
+
+	switch (planeconfig->format) {
+	case CARE1_FORMAT_UYVY:
+		du_write(priv, PnMR(index1), PnBM_MD_PnMR | MODE_UYVY_PnMR | alphamode);
+		break;
+	case CARE1_FORMAT_YUY2:
+		du_write(priv, PnMR(index1), PnBM_MD_PnMR | MODE_YUY2_PnMR | alphamode);
+		break;
+	default:
+		du_write(priv, PnMR(index1), PnBM_MD_PnMR | MODE_16BPP_PnMR | alphamode);
+	}
 
 	du_write(priv, PnMWR(index1), planeconfig->width);
 
@@ -315,7 +348,7 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 	/* set register */
 	du_set_plane(priv, index1);
 
-	priv->plane[index1].plane_pixel = planeconfig->depth;
+	priv->plane[index1].plane_pixel = care1_format_to_depth(planeconfig->format);
 	priv->plane[index1].mwx = planeconfig->pitch;
 	priv->plane[index1].disp_area = DISPLAY_AREA0;
 	priv->plane[index1].disp_area0_base =
@@ -324,7 +357,7 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 //		 ((planeconfig->phys + offset) & PnDSA_MASK);
 	priv->plane_area |= plane_bit1;
 
-	if (planeconfig->depth == 32) {
+	if (planeconfig->format == CARE1_FORMAT_ARGB) {
 
 		/* for plane2 */
 		du_write(priv, PnMWR(index2), planeconfig->width);
@@ -335,8 +368,8 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 		//	du_write(priv, PnMR(index2), (PnDDDF_16BPP_PnMR | PnBM_MD_PnMR | PnSPIM_TPOFF_PnMR));
 		//}
 		//else {
-			du_write(priv, PnMR(index1), (PnDDDF_16BPP_PnMR | PnBM_MD_PnMR | alphamode));
-			du_write(priv, PnMR(index2), (PnDDDF_16BPP_PnMR | PnBM_MD_PnMR | alphamode));
+			du_write(priv, PnMR(index1), (PnBM_MD_PnMR | PnDDDF_16BPP_PnMR | alphamode));
+			du_write(priv, PnMR(index2), (PnBM_MD_PnMR | PnDDDF_16BPP_PnMR | alphamode));
 		//}
 
 		/* use the value of plane1 */
@@ -360,7 +393,7 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 		/* set register */
 		du_set_plane(priv, index2);
 
-		priv->plane[index2].plane_pixel = planeconfig->depth;
+		priv->plane[index2].plane_pixel = care1_format_to_depth(planeconfig->format);
 		priv->plane[index2].mwx = planeconfig->pitch;
 		priv->plane[index2].disp_area = DISPLAY_AREA0;
 		priv->plane[index2].disp_area0_base =
@@ -373,8 +406,6 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 		priv->plane_area &= ~plane_bit2;
 	priv->plane_area = 4;
 
-	printk(KERN_DEBUG "plane_area 0x%08lx\n", priv->plane_area);
-	printk(KERN_DEBUG "DPPR 0x%08lx\n", du_read(priv,DPPR));
 	return;
 
 }
@@ -414,11 +445,11 @@ static void rcar_du_start_stop(struct rcar_du_priv *priv, int start)
 		du_write(priv, DSYSR, tmp | DRES_DSYSR);
 		clk_disable(priv->duclk);
 	}
-	printk(KERN_DEBUG "DPPR 0x%08lx\n", du_read(priv,DPPR));
 }
 
 static void rcar_du_stop(struct rcar_du_priv *priv)
 {
+
 	/* stop the lcdc */
 	rcar_du_start_stop(priv, DU_STOP);
 }
@@ -486,7 +517,6 @@ static int du_set_disp_timing(struct rcar_du_priv *priv, int mode)
 
 	du_write(priv, DAPCR, 0x77730011);
 
-	printk(KERN_DEBUG "DPPR 0x%08lx\n", du_read(priv,DPPR));
 	return ret;
 }
 
@@ -605,6 +635,8 @@ static int du_update_displaystart(int fb_num, struct rcar_du_priv *priv, CarE1Pl
 
 	du_write(priv, P1DSA0R + (index1   * PLANE_OFF), planeconfig->phys);
 	du_write(priv, P1DSA0R + ((index2) * PLANE_OFF), planeconfig->phys);
+	du_write(priv, P1DSA1R + (index1   * PLANE_OFF), planeconfig->phys);
+	du_write(priv, P1DSA1R + ((index2) * PLANE_OFF), planeconfig->phys);
 
 	/* Change frame buffer */
 	tmp = du_read(priv, PnMR(index1));	// FIXME: only for one plane?
@@ -736,11 +768,11 @@ static int rcar_du_set_par(struct fb_info *info)
 		/* color setting */
 
 		if (var->bits_per_pixel == BITPARPIXEL_16) {
-			planeconfig->depth = 16;
+			planeconfig->format = CARE1_FORMAT_RGB16;
 			//du_set_plane_mode(priv, BITPARPIXEL_16, info);
 		} else if (var->bits_per_pixel == BITPARPIXEL_24 ||
 			   var->bits_per_pixel == BITPARPIXEL_32) {
-			planeconfig->depth = 32;
+			planeconfig->format = CARE1_FORMAT_ARGB;
 			//du_set_plane_mode(priv, BITPARPIXEL_32, info);
 		}
 		/* update param */
@@ -755,7 +787,6 @@ static int rcar_du_set_par(struct fb_info *info)
 	/* start the DU */
 	rcar_du_start_stop(priv, DU_START);
 
-	printk(KERN_DEBUG "DPPR 0x%08lx\n", du_read(priv,DPPR));
 	return ret;
 
 err1:
@@ -783,11 +814,14 @@ static int rcar_ioctl (struct fb_info *info, unsigned int cmd, unsigned long arg
 		  if(copy_from_user(&config, (CarE1PlaneConfig*)arg, sizeof(CarE1PlaneConfig))!=0)
 			  return -EFAULT;
 
-		  if (config.depth > 16 && !(priv->dispdev->fb_desc[fb_num].caps & RCAR_FBCAPS_32BIT))
+		  if (care1_format_to_depth(config.format) > 16 && !(priv->dispdev->fb_desc[fb_num].caps & RCAR_FBCAPS_32BIT))
 			  return -ENOTSUPP;
 
 		  du_set_plane_mode_planeconfig( fb_num, priv, &config );
 
+		  if (config.phys != priv->planeconfig[fb_num].phys)
+			  du_update_displaystart( fb_num, priv, &config );
+
 		  priv->planeconfig[fb_num] = config;
 
 		  return 0;
@@ -991,7 +1025,7 @@ static int __devinit rcar_du_probe(struct platform_device *pdev)
 		 /* allocate and fill advanced planeconfig struct, used by directfb and the ioctl interface */
 		 priv->planeconfig[i].width = info->var.xres;
 		 priv->planeconfig[i].height = info->var.yres;
-		 priv->planeconfig[i].depth = info->var.bits_per_pixel;
+		 priv->planeconfig[i].format = depth_to_care1_format(info->var.bits_per_pixel);
 		 priv->planeconfig[i].x = 0;
 		 priv->planeconfig[i].y = 0;
 		 priv->planeconfig[i].pitch = info->fix.line_length;
diff --git a/include/video/rcarfb.h b/include/video/rcarfb.h
index 294c714..d2998cb 100644
--- a/include/video/rcarfb.h
+++ b/include/video/rcarfb.h
@@ -42,7 +42,8 @@ struct rcar_disp_info {
 enum rcar_fb_caps {
 	RCAR_FBCAPS_NONE	= 0x00,
 	RCAR_FBCAPS_32BIT	= 0x01,
-	RCAR_FBCAPS_ALL	= 0x01,
+	RCAR_FBCAPS_YC		= 0x02,
+	RCAR_FBCAPS_ALL	= 0x03,
 };
 
 struct rcar_fb_desc {
@@ -408,10 +409,15 @@ struct rcar_reso_info {
 #define PnYCDF_YUYV_PnMR	(1<<20)	/* YUYV format */
 #define PnVISL_VIN0_PnMR	(0<<26)	/* use Video Input 0 */
 #define PnVISL_VIN1_PnMR	(1<<26)	/* use Video Input 1 */
+
 #define MODE_16BPP_PnMR		(PnDDDF_16BPP_PnMR | PnBM_MD_PnMR | \
 				 PnSPIM_TPOFF_PnMR)
 #define MODE_RGB_PnMR		(PnDDDF_ARGB_PnMR | PnBM_MD_PnMR | \
 				 PnSPIM_TPOFF_PnMR)
+#define MODE_UYVY_PnMR		(PnDDDF_YC_PnMR | PnYCDF_UYVY_PnMR | PnBM_MD_PnMR | \
+				           PnSPIM_TPOFF_PnMR)
+#define MODE_YUY2_PnMR		(PnDDDF_YC_PnMR | PnYCDF_YUYV_PnMR | PnBM_MD_PnMR | \
+				           PnSPIM_TPOFF_PnMR)
 
 #define PnMWR(n)	(0x00104 + 0x100 * (n)) /* plane n */
 
@@ -797,12 +803,23 @@ typedef enum {
      CARE1_PLANE_OPACITY      = 0x00000004,
 } CarE1PlaneOptions;
 
+typedef enum {
+     CARE1_FORMAT_UNKNOWN     = 0x00000000,
+
+     CARE1_FORMAT_RGB16       = 0x00000001,
+     CARE1_FORMAT_ARGB        = 0x00000002,
+     CARE1_FORMAT_UYVY        = 0x00000003,
+     CARE1_FORMAT_YUY2        = 0x00000004,
+     CARE1_FORMAT_NV12        = 0x00000005,
+     CARE1_FORMAT_NV21        = 0x00000006,
+} CarE1PlaneFormat;
+
 typedef struct {
      CarE1PlaneOptions   options;
 
      unsigned long       phys;
      int                 pitch;
-     int                 depth;
+     CarE1PlaneFormat    format;
 
      int                 x;
      int                 y;
-- 
1.7.0.4

