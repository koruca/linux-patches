From 0e4c3ccf090aa92613683a78e5153fb6f4764673 Mon Sep 17 00:00:00 2001
From: Hideki EIRAKU <hdk@igel.co.jp>
Date: Fri, 6 Apr 2012 17:52:17 +0900
Subject: [PATCH 20/73] sound: soc: rcar: simplify dma access

---
 sound/soc/rcar/sss_pcm.c |   76 ++++++++++++++-------------------------------
 1 files changed, 24 insertions(+), 52 deletions(-)

diff --git a/sound/soc/rcar/sss_pcm.c b/sound/soc/rcar/sss_pcm.c
index a34b305..209cdf6 100644
--- a/sound/soc/rcar/sss_pcm.c
+++ b/sound/soc/rcar/sss_pcm.c
@@ -623,7 +623,6 @@ static int sss_dma_control(struct snd_pcm_substream *substream)
 	struct rcar_pcm_info *pcminfo = runtime->private_data;
 	struct rcar_audio_info *ainfo = pcminfo->ainfo;
 	struct hpbdma_pregs *dreg = ainfo->dmareg[dir];
-	struct ssi_regs *ssireg; /* physical address */
 	int did = pcminfo->id;
 	int pingpong;
 	u32 dma_size;
@@ -631,6 +630,7 @@ static int sss_dma_control(struct snd_pcm_substream *substream)
 	u32 tran_size;
 	u32 val;
 	int ret = 0;
+	u32 dar, sar;
 
 	FNC_ENTRY
 	/* check DMA status */
@@ -656,75 +656,47 @@ static int sss_dma_control(struct snd_pcm_substream *substream)
 	if (!dir) {	/* playback */
 		/* physical address of SSI data register */
 		if (did == CODEC1) {
-			ssireg = (struct ssi_regs *)(RC_BASE_SSS + SSI3_BASE);
-			if (!pingpong) {
-				writel(dma_paddr, &dreg->sar0);
-				writel((u32)&ssireg->tdr, &dreg->dar0);
-				writel((dma_size/tran_size), &dreg->tcr0);
-			} else {
-				writel(dma_paddr, &dreg->sar1);
-				writel((u32)&ssireg->tdr, &dreg->dar1);
-				writel((dma_size/tran_size), &dreg->tcr1);
-			}
+			dar = RC_BASE_SSS + SSI3_BASE +
+				offsetof(struct ssi_regs, tdr);
 		} else if (did == CODEC2) {
-			ssireg = (struct ssi_regs *)(RC_BASE_SSS + SSI0_BASE);
-			if (!pingpong) {
-				writel(dma_paddr, &dreg->sar0);
-				writel((u32)&ssireg->tdr, &dreg->dar0);
-				writel((dma_size/tran_size), &dreg->tcr0);
-			} else {
-				writel(dma_paddr, &dreg->sar1);
-				writel((u32)&ssireg->tdr, &dreg->dar1);
-				writel((dma_size/tran_size), &dreg->tcr1);
-			}
+			dar = RC_BASE_SSS + SSI0_BASE +
+				offsetof(struct ssi_regs, tdr);
 		} else if (did == CODEC3) {
-			ssireg = (struct ssi_regs *)(RC_BASE_SSS + SSI1_BASE);
-			if (!pingpong) {
-				writel(dma_paddr, &dreg->sar0);
-				writel((u32)&ssireg->tdr, &dreg->dar0);
-				writel((dma_size/tran_size), &dreg->tcr0);
-			} else {
-				writel(dma_paddr, &dreg->sar1);
-				writel((u32)&ssireg->tdr, &dreg->dar1);
-				writel((dma_size/tran_size), &dreg->tcr1);
-			}
+			dar = RC_BASE_SSS + SSI1_BASE +
+				offsetof(struct ssi_regs, tdr);
 		} else {
 			printk(KERN_ERR "No such sound device. (%d)\n", did);
 			return -ENODEV;
 		}
-
+		sar = dma_paddr;
 	} else {	/* capture */
 		/* physical address of SSI data register */
 		if (did == CODEC1) {
-			ssireg = (struct ssi_regs *)(RC_BASE_SSS + SSI4_BASE);
-			if (!pingpong) {
-				writel((u32)&ssireg->rdr, &dreg->sar0);
-				writel(dma_paddr, &dreg->dar0);
-				writel((dma_size/tran_size), &dreg->tcr0);
-			} else {
-				writel((u32)&ssireg->rdr, &dreg->sar1);
-				writel(dma_paddr, &dreg->dar1);
-				writel((dma_size/tran_size), &dreg->tcr1);
-			}
+			sar = RC_BASE_SSS + SSI4_BASE +
+				offsetof(struct ssi_regs, rdr);
 		} else if (did == CODEC2) {
-			ssireg = (struct ssi_regs *)(RC_BASE_SSS + SSI2_BASE);
-			if (!pingpong) {
-				writel((u32)&ssireg->rdr, &dreg->sar0);
-				writel(dma_paddr, &dreg->dar0);
-				writel((dma_size/tran_size), &dreg->tcr0);
-			} else {
-				writel((u32)&ssireg->rdr, &dreg->sar1);
-				writel(dma_paddr, &dreg->dar1);
-				writel((dma_size/tran_size), &dreg->tcr1);
-			}
+			sar = RC_BASE_SSS + SSI2_BASE +
+				offsetof(struct ssi_regs, rdr);
 		} else if (did == CODEC3) {
 			/* no process */
+			goto no;
 		} else {
 			printk(KERN_ERR "No such sound device. (%d)\n", did);
 			return -ENODEV;
 		}
+		dar = dma_paddr;
+	}
+	if (!pingpong) {
+		writel(sar, &dreg->sar0);
+		writel(dar, &dreg->dar0);
+		writel((dma_size/tran_size), &dreg->tcr0);
+	} else {
+		writel(sar, &dreg->sar1);
+		writel(dar, &dreg->dar1);
+		writel((dma_size/tran_size), &dreg->tcr1);
 	}
 
+no:
 	/* Update period */
 	pcminfo->period++;
 
-- 
1.7.0.4

