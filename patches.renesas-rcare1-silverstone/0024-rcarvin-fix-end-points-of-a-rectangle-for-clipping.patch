From 302df52bf819f97786e3a00bc73297611b5e9c0e Mon Sep 17 00:00:00 2001
From: Katsuya Matsubara <matsu@igel.co.jp>
Date: Wed, 30 May 2012 14:04:21 +0900
Subject: [PATCH 24/80] rcarvin: fix end points of a rectangle for clipping

The end points of a rectangle for clipping must be expressed
on the origin (0,0) coordinate system. Therefore, value of
the lower right corner of a 640x480 sized rectangle should be
(639, 479) not (640, 480).

Signed-off-by: Katsuya Matsubara <matsu@igel.co.jp>
---
 drivers/media/video/rcarvin.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/media/video/rcarvin.c b/drivers/media/video/rcarvin.c
index 8173125..f612931 100644
--- a/drivers/media/video/rcarvin.c
+++ b/drivers/media/video/rcarvin.c
@@ -838,15 +838,15 @@ static int rcar_vin_set_rect(struct soc_camera_device *icd)
 	/* Set Pre-Clip and Post-Clip areas */
 	/* Set Pre-Clip */
 	vin_write(pcdev, V0SPPrC, left_offset);
-	vin_write(pcdev, V0EPPrC, left_offset + cam->width);
+	vin_write(pcdev, V0EPPrC, left_offset + cam->width - 1);
 	if ((pcdev->field == V4L2_FIELD_INTERLACED) ||
 		(pcdev->field == V4L2_FIELD_INTERLACED_TB) ||
 		(pcdev->field == V4L2_FIELD_INTERLACED_BT)) {
 		vin_write(pcdev, V0SLPrC, top_offset / 2);
-		vin_write(pcdev, V0ELPrC, (top_offset + cam->height) / 2);
+		vin_write(pcdev, V0ELPrC, (top_offset + cam->height) / 2 - 1);
 	} else {
 		vin_write(pcdev, V0SLPrC, top_offset);
-		vin_write(pcdev, V0ELPrC, top_offset + cam->height);
+		vin_write(pcdev, V0ELPrC, top_offset + cam->height - 1);
 	}
 
 	if ((cam_subrect->width > NTSC_WIDTH) ||
@@ -856,13 +856,13 @@ static int rcar_vin_set_rect(struct soc_camera_device *icd)
 	/* Set Post-Clip */
 	vin_write(pcdev, V0SPPoC, 0);
 	vin_write(pcdev, V0SLPoC, 0);
-	vin_write(pcdev, V0EPPoC, cam_subrect->width);
+	vin_write(pcdev, V0EPPoC, cam_subrect->width - 1);
 	if ((pcdev->field == V4L2_FIELD_INTERLACED) ||
 		(pcdev->field == V4L2_FIELD_INTERLACED_TB) ||
 		(pcdev->field == V4L2_FIELD_INTERLACED_BT))
-		vin_write(pcdev, V0ELPoC, cam_subrect->height / 2);
+		vin_write(pcdev, V0ELPoC, cam_subrect->height / 2 - 1);
 	else
-		vin_write(pcdev, V0ELPoC, cam_subrect->height);
+		vin_write(pcdev, V0ELPoC, cam_subrect->height - 1);
 
 	vin_write(pcdev, V0IS, ((cam->width + 15) & ~0xf));
 
-- 
1.7.0.4

