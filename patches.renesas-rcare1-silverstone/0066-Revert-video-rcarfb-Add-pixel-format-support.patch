From 2a90012921840dc1872607c5052d6c4781074bf4 Mon Sep 17 00:00:00 2001
From: Katsuya Matsubara <matsu@igel.co.jp>
Date: Tue, 14 Aug 2012 18:19:53 +0900
Subject: [PATCH 66/80] Revert "video: rcarfb: Add pixel format support"

This reverts commit ca16342c972ca508a7a632d73982494864c1f736.

Conflicts:

	drivers/video/rcarfb.c

Signed-off-by: Katsuya Matsubara <matsu@igel.co.jp>
---
 drivers/video/rcarfb.c |  147 ++----------------------------------------------
 include/video/rcarfb.h |   21 -------
 2 files changed, 6 insertions(+), 162 deletions(-)

diff --git a/drivers/video/rcarfb.c b/drivers/video/rcarfb.c
index 59ec46a..0946e79 100644
--- a/drivers/video/rcarfb.c
+++ b/drivers/video/rcarfb.c
@@ -29,7 +29,6 @@
 #include <linux/slab.h>
 #include <video/rcarfb.h>
 #include <asm/atomic.h>
-#include <linux/uaccess.h> /* for copy_from_user() */
 
 #include <mach/hardware.h>
 #include <mach/platform.h>
@@ -203,15 +202,14 @@ static void du_set_plane(struct rcar_du_priv *priv, unsigned long plane_no)
 
 	if (priv->plane[plane_no].plane_pixel == BITPARPIXEL_16) {
 		/* 16bpp */
-		du_write(priv, P1DDCR4 + (plane_no * PLANE_OFF),
-		 CODE_DDCR4 | (du_read(priv, P1DDCR4 +
-		  (plane_no * PLANE_OFF)) & ~P1EDF_MASK));
+		du_write(priv, P1DDCR4 + (plane_no * PLANE_OFF),\
+		 CODE_DDCR4 | (du_read(priv, P1DDCR4 + \
+		  (plane_no * PLANE_OFF)) & ~0x07));
 	} else {
 		/* 32bpp */
-		du_write(priv, P1DDCR4 + (plane_no * PLANE_OFF),
-			 CODE_DDCR4 | ((du_read(priv, P1DDCR4 +
-			 (plane_no * PLANE_OFF))) & ~P1EDF_MASK)
-			  | P1DDCR4_ARGB8888);
+		du_write(priv, P1DDCR4 + (plane_no * PLANE_OFF), \
+			 CODE_DDCR4 | ((du_read(priv, P1DDCR4 + \
+			 (plane_no * PLANE_OFF))) & ~0x07) | 0x01);
 	}
 
 	/* for plane */
@@ -606,119 +604,6 @@ err1:
 	return ret;
 }
 
-static int rcar_du_set_pxfmt(struct fb_info *info, unsigned long pixfmt)
-{
-	int PixData;
-	int ret = 0;
-	struct rcar_du_priv *priv = info->par;
-
-	if ((pixfmt < RCAR_PIXFMT_ARGB8888) || (pixfmt > RCAR_PIXFMT_YUYV)) {
-		ret = -EINVAL;
-		goto error_end;
-	}
-
-	if ((pixfmt == RCAR_PIXFMT_ARGB8888) ||
-		 (pixfmt == RCAR_PIXFMT_ARGB0565)) {
-		PixData = 0x01;
-	} else if ((pixfmt == RCAR_PIXFMT_ARGB1555) ||
-		 (pixfmt == RCAR_PIXFMT_RGB888)) {
-		PixData = 0x02;
-	} else if ((pixfmt == RCAR_PIXFMT_UYVY) ||
-		 (pixfmt == RCAR_PIXFMT_YUYV)
-		|| (pixfmt == RCAR_PIXFMT_RGB666)) {
-		PixData = 0x03;
-	} else {
-		ret = -EINVAL;
-		goto error_end;
-	}
-
-	if ((pixfmt == RCAR_PIXFMT_ARGB1555) ||
-		 (pixfmt == RCAR_PIXFMT_ARGB0565) ||
-		 (pixfmt == RCAR_PIXFMT_UYVY) ||
-		  (pixfmt == RCAR_PIXFMT_YUYV)) {
-		if (pixfmt == RCAR_PIXFMT_YUYV) {
-			/* YUYV */
-			du_write(priv, (P1MR + (PLANE_OFF * priv->plane_area)),
-				((du_read(priv, P1MR +
-				(PLANE_OFF * priv->plane_area))
-				 & (~PnYCDF_YUYV_PnMR)) | (PnYCDF_YUYV_PnMR)));
-		} else {
-			/* UYVY */
-			du_write(priv, (P1MR + (PLANE_OFF * priv->plane_area)),
-				 (du_read(priv, P1MR +
-				  (PLANE_OFF * priv->plane_area))
-				  & (~PnYCDF_YUYV_PnMR)));
-		}
-		du_write(priv, (P1DDCR4 + (PLANE_OFF * priv->plane_area)),
-			 CODE_DDCR4 | (du_read(priv, P1DDCR4 +
-			 (PLANE_OFF * priv->plane_area)) & ~P1EDF_MASK));
-		du_write(priv, (P1MR + (PLANE_OFF * priv->plane_area)),
-			 ((du_read(priv, P1MR + (PLANE_OFF * priv->plane_area))
-			  & ~PnDDDF_MASK) | PixData));
-	} else {
-		du_write(priv, (P1DDCR4 + (PLANE_OFF * priv->plane_area)),
-			 CODE_DDCR4 | ((du_read(priv, P1DDCR4 +
-			 (PLANE_OFF * priv->plane_area)) & ~P1EDF_MASK)
-			  | PixData));
-		du_write(priv, (P1MR + (PLANE_OFF * priv->plane_area)),
-			 ((du_read(priv, P1MR + (PLANE_OFF * priv->plane_area))
-			  & ~PnDDDF_MASK) | PnDDDF_16BPP_32BPP_PnMR));
-	}
-
-error_end:
-	return ret;
-}
-
-static int rcar_du_get_pxfmt(struct fb_info *info, unsigned long *pixfmt)
-{
-	int temp;
-	int ret = 0;
-	struct rcar_du_priv *priv = info->par;
-
-	if (pixfmt == NULL) {
-		printk(KERN_INFO"%s error.(pixfmt=NULL)\n", __func__);
-		ret = -EINVAL;
-		goto error_end;
-	}
-
-	temp = du_read(priv, P1DDCR4 + (PLANE_OFF * priv->plane_area))
-		 & P1EDF_MASK;
-
-	if (temp) {
-		if (temp == P1DDCR4_ARGB8888) {
-			*pixfmt = RCAR_PIXFMT_ARGB8888;
-		} else if (temp == P1DDCR4_RGB888) {
-			*pixfmt = RCAR_PIXFMT_RGB888;
-		} else if (temp == P1DDCR4_RGB666) {
-			*pixfmt = RCAR_PIXFMT_RGB666;
-		} else {
-			ret = -EINVAL;
-			goto error_end;
-		}
-	} else {
-		temp = du_read(priv, P1MR +
-			 (PLANE_OFF * priv->plane_area)) & PnDDDF_MASK;
-		if (temp == PnDDDF_16BPP_32BPP_PnMR) {
-			*pixfmt = RCAR_PIXFMT_ARGB0565;
-		} else if (temp == PnDDDF_ARGB_PnMR) {
-			*pixfmt = RCAR_PIXFMT_ARGB1555;
-		} else if (temp == PnDDDF_YC_PnMR) {
-			if ((du_read(priv, P1MR +
-				 (PLANE_OFF * priv->plane_area))
-			 & PnYCDF_YUYV_PnMR) == PnYCDF_YUYV_PnMR)
-				*pixfmt = RCAR_PIXFMT_YUYV;
-			else
-				*pixfmt = RCAR_PIXFMT_UYVY;
-		} else {
-			ret = -EINVAL;
-			goto error_end;
-		}
-	}
-
-error_end:
-	return ret;
-}
-
 static int rcar_du_wait_for_vsync(struct fb_info *info)
 {
 	struct rcar_du_priv *priv = info->par;
@@ -739,32 +624,12 @@ static int rcar_du_ioctl(struct fb_info *info, unsigned int cmd,
 			 unsigned long arg)
 {
 	int retval;
-	struct RCARFB_PIXFMT rcar_fmt;
 
 	switch (cmd) {
 	case FBIO_WAITFORVSYNC:
 		retval = rcar_du_wait_for_vsync(info);
 		break;
 
-	case FBIOCS_PIXFMT:
-		if (copy_from_user(&rcar_fmt, (void __user *)arg,
-				sizeof(struct RCARFB_PIXFMT))) {
-			printk(KERN_INFO"copy_from_user error. (FBIOCS_PIXFMT)\n");
-			retval = -EFAULT;
-			break;
-		}
-		retval = rcar_du_set_pxfmt(info, rcar_fmt.pixfmt);
-		break;
-
-	case FBIOCG_PIXFMT:
-		retval = rcar_du_get_pxfmt(info, &rcar_fmt.pixfmt);
-		if (copy_to_user((void __user *)arg, &rcar_fmt,
-				sizeof(struct RCARFB_PIXFMT))) {
-			printk(KERN_INFO"copy_to_user error. (FBIOCG_PIXFMT)\n");
-			retval = -EFAULT;
-		}
-		break;
-
 	default:
 		retval = -ENOIOCTLCMD;
 		break;
diff --git a/include/video/rcarfb.h b/include/video/rcarfb.h
index 2eed2e7..fae0c9c 100644
--- a/include/video/rcarfb.h
+++ b/include/video/rcarfb.h
@@ -65,15 +65,6 @@ struct rcar_reso_info {
 #define DEFAULT_BITPARPIXEL	BITPARPIXEL_16
 #define BYTEPIXEL	8
 
-#define	RCAR_PIXFMT_ARGB8888	0
-#define	RCAR_PIXFMT_ARGB0565	1
-#define	RCAR_PIXFMT_ARGB4444	2 /* Not Support */
-#define	RCAR_PIXFMT_ARGB1555	3
-#define	RCAR_PIXFMT_RGB888	4
-#define	RCAR_PIXFMT_RGB666	5
-#define	RCAR_PIXFMT_UYVY	6
-#define	RCAR_PIXFMT_YUYV	7
-
 #define	MODE_VGA	0	/* 640x480 */
 #define	MODE_SVGA	1	/* 800x600 */
 #define	MODE_XGA	2	/* 1024x768 */
@@ -117,13 +108,6 @@ struct rcar_reso_info {
 #define DISPLAY_AREA0	0
 #define DISPLAY_AREA1	1
 
-struct RCARFB_PIXFMT {
-	unsigned long pixfmt;
-};
-
-#define FBIOCS_PIXFMT	_IOW(0xFA, 0x00, struct RCARFB_PIXFMT)
-#define FBIOCG_PIXFMT	_IOR(0xFA, 0x01, struct RCARFB_PIXFMT)
-
 /***** R-Car Display Unit Register Definitons *****/
 /* Display control register offset definitions */
 #define DSYSR		0x00000	/* display 1 */
@@ -385,7 +369,6 @@ struct RCARFB_PIXFMT {
 #define PnDDDF_16BPP_32BPP_PnMR	(1<<0)	/* 16bit or 32bit */
 #define PnDDDF_ARGB_PnMR	(2<<0)	/* ARGB */
 #define PnDDDF_YC_PnMR		(3<<0)	/* YC */
-#define PnDDDF_MASK		(3<<0)	/* PnDDF_MASK */
 #define PnBM_MD_PnMR		(0<<4)	/* Manual display change mode */
 #define PnBM_AR_PnMR		(1<<4)	/* Auto rendering mode */
 #define PnBM_AD_PnMR		(2<<4)	/* Auto display change mode */
@@ -474,10 +457,6 @@ struct RCARFB_PIXFMT {
 
 #define P1DDCR4		0x00190
 #define CODE_DDCR4	(0x7766<<16)
-#define P1EDF_MASK	0x07
-#define P1DDCR4_ARGB8888	0x01
-#define P1DDCR4_RGB888		0x02
-#define P1DDCR4_RGB666		0x03
 
 #define PLANE_OFF	0x00100
 #define PLANE1		0x0
-- 
1.7.0.4

