From 84083ec5a4a3e479324c48bfa3d6e2e64e78aa5b Mon Sep 17 00:00:00 2001
From: Takanari Hayama <taki@igel.co.jp>
Date: Mon, 9 Jan 2012 13:24:19 +0900
Subject: [PATCH 11/73] rcarfb: fixes for handling alpha blending and NV12/21.

NV12/21 and alpha bledning are now properly handled with this fix.
Fixes from Andi on 2011-12-28.
---
 arch/arm/mach-rcar/board-silverstone.c |   12 +++++-----
 drivers/video/rcarfb.c                 |   38 +++++++++++++++++++++-----------
 include/video/rcarfb.h                 |   33 ++++++++++++++++++++++-----
 3 files changed, 58 insertions(+), 25 deletions(-)

diff --git a/arch/arm/mach-rcar/board-silverstone.c b/arch/arm/mach-rcar/board-silverstone.c
index 0d6c480..896ced4 100644
--- a/arch/arm/mach-rcar/board-silverstone.c
+++ b/arch/arm/mach-rcar/board-silverstone.c
@@ -572,18 +572,18 @@ static struct rcar_reso_info rcar_reso_par = {
 		.vsp  = 809,
 	},
 	.fb_desc[0] = {
-		.caps	= RCAR_FBCAPS_YC,
+		.caps	= RCAR_FBCAPS_32BIT | RCAR_FBCAPS_YC,
 		.index1	= 0,
-		.index2	= 0,
+		.index2	= 1,
 	},
 	.fb_desc[1] = {
 		.caps	= RCAR_FBCAPS_YC,
-		.index1	= 1,
-		.index2	= 1,
+		.index1	= 2,
+		.index2	= 2,
 	},
 	.fb_desc[2] = {
-		.caps	= RCAR_FBCAPS_32BIT,
-		.index1	= 2,
+		.caps	= RCAR_FBCAPS_NONE,
+		.index1	= 3,
 		.index2	= 3,
 	},
 	.fb_desc[3] = {
diff --git a/drivers/video/rcarfb.c b/drivers/video/rcarfb.c
index 0ea1458..9fa3f91 100644
--- a/drivers/video/rcarfb.c
+++ b/drivers/video/rcarfb.c
@@ -224,7 +224,7 @@ static void du_set_plane(struct rcar_du_priv *priv, int plane_no)
 
 static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv, CarE1PlaneConfig *planeconfig )
 {
-	unsigned long dppr, dshpr;
+	unsigned long dppr, dshpr, ds2pr;
 	unsigned long xres, yres;
 	unsigned long offset;
 	struct rcar_plane_param *plane1;
@@ -240,17 +240,15 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 	int mask1  = 0x7 << shift1;
 	int mask2  = 0x7 << shift2;
 
-	int alphamode = 0;
+	int alphamode = PnSPIM_TPOFF_PnMR;
+
+	int i;
 
 //	printk("%s()\n",__FUNCTION__);
 
-	if (planeconfig->options & CARE1_PLANE_OPACITY) {
-		alphamode = PnSPIM_ALPOFF_PnMR;
-	}
-	else if (planeconfig->options & CARE1_PLANE_ALPHACHANNEL) {
-		if (planeconfig->format == CARE1_FORMAT_ARGB)
-			alphamode = PnSPIM_TPOFF_PnMR;
-	}
+	if ((planeconfig->options & CARE1_PLANE_OPACITY ) ||
+	    (planeconfig->options & CARE1_PLANE_ALPHACHANNEL && planeconfig->format == CARE1_FORMAT_ARGB ))
+		alphamode = PnSPIM_TPOFF_PnMR | PnSPIM_ALPON_PnMR;
 
 //	printk(KERN_DEBUG "index1 %d\n", index1);
 //	printk(KERN_DEBUG "index2 %d\n", index2);
@@ -267,14 +265,28 @@ static void du_set_plane_mode_planeconfig( int fb_num, struct rcar_du_priv *priv
 	dshpr = du_read(priv, DSHPR);
 	dshpr &= MASK_PRIL;
 
+
+	/* reconfigure ds2pr to show only enabled planes */
+	ds2pr = 0;
+	for (i=0;i<priv->dispdev->fb_num;i++) {
+		if (!(priv->planeconfig[i].options & CARE1_PLANE_DISABLED)) {
+			ds2pr |= ((priv->dispdev->fb_desc[i].index1+1) << (4*priv->dispdev->fb_desc[i].index1));
+			if (priv->planeconfig[i].format == CARE1_FORMAT_ARGB)
+				/* enable second plane only for ARGB */
+				ds2pr |= ((priv->dispdev->fb_desc[i].index2+1) << (4*priv->dispdev->fb_desc[i].index2));
+		}
+	}
+
+	du_write(priv, DS2PR, ds2pr);
+
 	if (care1_format_to_depth(planeconfig->format) == 16) {
 		/* In case of 16BPP, use the plane1 */
-		du_write(priv, DEFR4, BPP16_DEFR4);
+		du_write(priv, DEFR4, BPP32_DEFR4);
 		du_write(priv, PnDDCR(index1), BPP16_DDCR);
 
 		dppr &= ~mask1;
 		du_write(priv, DPPR, dppr | ((DPE | index1) << shift1));/* plane1 */
-		du_write(priv, DSHPR, (dshpr | BPP16_PRIL_DSHPR));
+		du_write(priv, DSHPR, (dshpr | BPP32_PRIL_DSHPR));
 	} else {
 		/* In case of 32BPP, use the plane1 and plane2 */
 		du_write(priv, DEFR4, BPP32_DEFR4);
@@ -896,13 +908,13 @@ static int rcar_ioctl (struct fb_info *info, unsigned int cmd, unsigned long arg
 		  if (care1_format_to_depth(config.format) > 16 && !(priv->dispdev->fb_desc[fb_num].caps & RCAR_FBCAPS_32BIT))
 			  return -ENOTSUPP;
 
+		  priv->planeconfig[fb_num] = config;
+
 		  du_set_plane_mode_planeconfig( fb_num, priv, &config );
 
 		  if (config.phys != priv->planeconfig[fb_num].phys)
 			  du_update_displaystart( fb_num, priv, &config );
 
-		  priv->planeconfig[fb_num] = config;
-
 		  return 0;
 
 	case CARE1_PLANE_SET_BUFFER:
diff --git a/include/video/rcarfb.h b/include/video/rcarfb.h
index 33278b7..443f2e2 100644
--- a/include/video/rcarfb.h
+++ b/include/video/rcarfb.h
@@ -409,12 +409,33 @@ struct rcar_reso_info {
 #define PnCPSL_CP2_PnMR		(1<<8)	/* Color pallet selected 2 */
 #define PnCPSL_CP3_PnMR		(2<<8)	/* Color pallet selected 3 */
 #define PnCPSL_CP4_PnMR		(3<<8)	/* Color pallet selected 4 */
-#define PnSPIM_TPON_PnMR	(0<<12)	/* Transparent Color on */
-#define PnSPIM_ALPON_PnMR	(1<<12)	/* Alphar blend on */
-#define PnSPIM_EORON_PnMR	(2<<12)	/* EOR on */
-#define PnSPIM_TPOFF_PnMR	(4<<12)	/* Transparent Color off */
-#define PnSPIM_ALPOFF_PnMR	(5<<12)	/* Alphar blend off */
-#define PnSPIM_EOROFF_PnMR	(6<<12)	/* EOR off */
+
+
+
+//#define PnSPIM_TPON_PnMR	(0<<12)	/* Transparent Color on */
+//#define PnSPIM_ALPON_PnMR	(1<<12)	/* Alphar blend on */
+//#define PnSPIM_EORON_PnMR	(2<<12)	/* EOR on */
+//#define PnSPIM_TPOFF_PnMR	(4<<12)	/* Transparent Color off */
+//#define PnSPIM_ALPOFF_PnMR	(5<<12)	/* Alphar blend off */
+//#define PnSPIM_EOROFF_PnMR	(6<<12)	/* EOR off */
+
+
+/*  ANDI: The above were simply wrong, for example for alpha blending without color keying it has to be 101,
+ *  which is called "ALPOFF" above, which makes no sense.
+ *
+ *  NOTE: Setting EOR and Alpha blending at the same time is not allowed.
+ *
+ */
+#define PnSPIM_TPON_PnMR	     (0<<14)	/* Transparent Color (color keying) on */
+#define PnSPIM_TPOFF_PnMR	(1<<14)	/* Transparent Color (color keying) off  */
+
+#define PnSPIM_ALPON_PnMR	(1<<12)	/* Alphar blend on  */
+#define PnSPIM_ALPOFF_PnMR	(0<<12)	/* Alphar blend off */
+
+#define PnSPIM_EORON_PnMR	(1<<13)	/* EOR on */
+#define PnSPIM_EOROFF_PnMR	(0<<13)	/* EOR off */
+
+
 #define PnWAE_ON_PnMR		(1<<16)	/* Wrap around Enable */
 #define PnTC_R_PnMR			(0<<17)	/* Tranparent color is PnTC1R */
 #define PnTC_CP_PnMR		(1<<17)	/* Tranparent color is color pallet */
-- 
1.7.0.4

