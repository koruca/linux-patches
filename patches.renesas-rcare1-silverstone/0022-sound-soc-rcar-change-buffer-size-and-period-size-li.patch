From 987627c38421fa091d520c6c78f03448cf2cba84 Mon Sep 17 00:00:00 2001
From: Hideki EIRAKU <hdk@igel.co.jp>
Date: Mon, 9 Apr 2012 15:46:08 +0900
Subject: [PATCH 22/73] sound: soc: rcar: change buffer size and period size limitation

---
 sound/soc/rcar/sss_pcm.c |   28 +++++++++++++++++++---------
 sound/soc/rcar/sss_pcm.h |    4 ++--
 2 files changed, 21 insertions(+), 11 deletions(-)

diff --git a/sound/soc/rcar/sss_pcm.c b/sound/soc/rcar/sss_pcm.c
index 74f2d44..4a4aefe 100644
--- a/sound/soc/rcar/sss_pcm.c
+++ b/sound/soc/rcar/sss_pcm.c
@@ -647,7 +647,8 @@ static int sss_dma_control(struct snd_pcm_substream *substream)
 	dma_size = frames_to_bytes(runtime, runtime->period_size);
 
 	/* DMA physical adddress */
-	dma_paddr = runtime->dma_addr + (pingpong * dma_size);
+	dma_paddr = runtime->dma_addr + ((pcminfo->period % runtime->periods)
+					 * dma_size);
 
 	/* DMA transfer size */
 	tran_size = (runtime->channels == STEREO) ? sizeof(u32) : sizeof(u16);
@@ -698,7 +699,7 @@ static int sss_dma_control(struct snd_pcm_substream *substream)
 
 no:
 	/* Update period */
-	pcminfo->period++;
+	pcminfo->period = (pcminfo->period + 1) % (runtime->periods * 2);
 
 	FNC_EXIT
 	return ret;
@@ -800,7 +801,8 @@ static void sss_dma_resume(struct snd_pcm_substream *substream)
 static void sss_dma_callback(void *data, int int_status)
 {
 	struct snd_pcm_substream *substream = data;
-	struct rcar_pcm_info *pcminfo = substream->runtime->private_data;
+	struct snd_pcm_runtime *runtime = substream->runtime;
+	struct rcar_pcm_info *pcminfo = runtime->private_data;
 	int ret = 0;
 
 	FNC_ENTRY
@@ -1018,10 +1020,10 @@ static struct snd_pcm_hardware sss_pcm_hardware[] = {
 		.channels_min		= 1,
 		.channels_max		= 2,
 		.buffer_bytes_max	= PREALLOC_BUFFER,
-		.period_bytes_min	= (PREALLOC_BUFFER / 2),
+		.period_bytes_min	= 128,
 		.period_bytes_max	= (PREALLOC_BUFFER / 2),
 		.periods_min		= 2,
-		.periods_max		= 2,
+		.periods_max		= 512,
 	},
 	{ /* CODEC#2 */
 		.info			= (SNDRV_PCM_INFO_INTERLEAVED	|
@@ -1035,10 +1037,10 @@ static struct snd_pcm_hardware sss_pcm_hardware[] = {
 		.channels_min		= 1,
 		.channels_max		= 2,
 		.buffer_bytes_max	= PREALLOC_BUFFER,
-		.period_bytes_min	= (PREALLOC_BUFFER / 2),
+		.period_bytes_min	= 128,
 		.period_bytes_max	= (PREALLOC_BUFFER / 2),
 		.periods_min		= 2,
-		.periods_max		= 2,
+		.periods_max		= 512,
 	},
 	{ /* CODEC#3 */
 		.info			= (SNDRV_PCM_INFO_INTERLEAVED	|
@@ -1052,10 +1054,10 @@ static struct snd_pcm_hardware sss_pcm_hardware[] = {
 		.channels_min		= 1,
 		.channels_max		= 2,
 		.buffer_bytes_max	= PREALLOC_BUFFER,
-		.period_bytes_min	= (PREALLOC_BUFFER / 2),
+		.period_bytes_min	= 128,
 		.period_bytes_max	= (PREALLOC_BUFFER / 2),
 		.periods_min		= 2,
-		.periods_max		= 2,
+		.periods_max		= 512,
 	},
 };
 
@@ -1066,6 +1068,14 @@ static int sss_pcm_open(struct snd_pcm_substream *substream)
 	int ret = 0;
 
 	FNC_ENTRY
+	ret = snd_pcm_hw_constraint_integer(substream->runtime,
+					    SNDRV_PCM_HW_PARAM_PERIODS);
+	if (ret < 0)
+		return ret;
+	ret = snd_pcm_hw_constraint_step(substream->runtime, 0,
+					 SNDRV_PCM_HW_PARAM_PERIOD_BYTES, 32);
+	if (ret < 0)
+		return ret;
 	hw = (pcminfo->id == CODEC1) ? &sss_pcm_hardware[CODEC1] :
 		((pcminfo->id == CODEC2) ? &sss_pcm_hardware[CODEC2] :
 		&sss_pcm_hardware[CODEC3]);
diff --git a/sound/soc/rcar/sss_pcm.h b/sound/soc/rcar/sss_pcm.h
index 7844c40..0e1ffa7 100644
--- a/sound/soc/rcar/sss_pcm.h
+++ b/sound/soc/rcar/sss_pcm.h
@@ -43,8 +43,8 @@
 #define	SSI4_BASE	0x00040000
 
 /* buffer size */
-#define PREALLOC_BUFFER		(64 * 1024)
-#define PREALLOC_BUFFER_MAX	(64 * 1024)
+#define PREALLOC_BUFFER		(384 * 1024)
+#define PREALLOC_BUFFER_MAX	(384 * 1024)
 
 /* SSICRn bit */
 #define	SSICR_FORCE	(1<<31)
-- 
1.7.0.4

